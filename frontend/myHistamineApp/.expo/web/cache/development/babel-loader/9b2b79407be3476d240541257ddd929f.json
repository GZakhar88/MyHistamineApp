{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/zazam1/greenfox/my-histamine-app/frontend/myHistamineApp/screens/searchScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nvar URL = \"http://localhost:8080/ingredients/\";\nimport Ingredient from \"../Ingredient\";\nexport default function searchScreen() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      input = _React$useState2[0],\n      setInput = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      result = _React$useState4[0],\n      setResult = _React$useState4[1];\n\n  function getIngredient(input) {\n    var fetchItem, response;\n    return _regeneratorRuntime.async(function getIngredient$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(URL + input, {\n              method: \"GET\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              }\n            }));\n\n          case 3:\n            fetchItem = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetchItem.json());\n\n          case 6:\n            response = _context.sent;\n            response === undefined ? setResult(undefined) : setResult(response[0]);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Search an Item!\"), React.createElement(Ingredient, {\n    props: result,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"What are you looking for?\",\n    keyboardType: \"default\",\n    onChangeText: function onChangeText(text) {\n      return setInput(text.toLocaleLowerCase());\n    },\n    value: input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    disabled: input !== \"\" ? false : true,\n    style: styles.button,\n    title: \"Search\",\n    onPress: function onPress() {\n      getIngredient(input);\n      Alert.alert(\"You just search about \" + input);\n      setInput(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  text: {\n    margin: 10,\n    fontSize: 20\n  },\n  input: {\n    width: 300,\n    height: 50,\n    borderWidth: 1,\n    borderColor: \"black\",\n    margin: 10,\n    borderRadius: 10,\n    padding: 10\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  resultContainer: {\n    backgroundColor: \"green\",\n    width: 350,\n    height: 100\n  }\n});","map":{"version":3,"sources":["/Users/zazam1/greenfox/my-histamine-app/frontend/myHistamineApp/screens/searchScreen.js"],"names":["StatusBar","React","URL","Ingredient","searchScreen","useState","input","setInput","result","setResult","getIngredient","fetch","method","headers","Accept","fetchItem","json","response","undefined","console","log","styles","container","text","toLocaleLowerCase","button","Alert","alert","StyleSheet","create","margin","fontSize","width","height","borderWidth","borderColor","borderRadius","padding","flex","backgroundColor","alignItems","justifyContent","resultContainer"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View, TextInput, Button, Alert } from \"react-native\";\nconst URL = \"http://localhost:8080/ingredients/\";\nimport Ingredient from \"../Ingredient\";\n\nexport default function searchScreen() {\n  const [input, setInput] = React.useState(\"\");\n  const [result, setResult] = React.useState({});\n\n  async function getIngredient(input) {\n    try {\n      const fetchItem = await fetch(URL + input, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const response = await fetchItem.json();\n      response === undefined ? setResult(undefined) : setResult(response[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>Search an Item!</Text>\n      <Ingredient props={result} />\n      <TextInput\n        style={styles.input}\n        placeholder=\"What are you looking for?\"\n        keyboardType=\"default\"\n        onChangeText={(text) => setInput(text.toLocaleLowerCase())}\n        value={input}\n      />\n      <Button\n        disabled={input !== \"\" ? false : true}\n        style={styles.button}\n        title=\"Search\"\n        onPress={() => {\n          getIngredient(input);\n          Alert.alert(`You just search about ${input}`);\n          setInput(\"\");\n        }}\n      />\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    margin: 10,\n    fontSize: 20,\n  },\n  input: {\n    width: 300,\n    height: 50,\n    borderWidth: 1,\n    borderColor: \"black\",\n    margin: 10,\n    borderRadius: 10,\n    padding: 10,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  resultContainer: {\n    backgroundColor: \"green\",\n    width: 350,\n    height: 100,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}